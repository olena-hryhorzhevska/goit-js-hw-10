{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet userSelectedDate = null;\nlet input = document.querySelector('#datetime-picker');\nlet startBtn = document.querySelector('[data-start]');\nlet day = document.querySelector('[data-days]');\nlet hour = document.querySelector('[data-hours]');\nlet minute = document.querySelector('[data-minutes]');\nlet second = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    let dateNow = new Date();\n    if (userSelectedDate && userSelectedDate < dateNow) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        backgroundColor: '#ff4d4d',\n        messageColor: '#fff',\n        icon: 'material-icons',\n        iconText: 'close',\n        iconColor: 'rgba(255, 255, 255, 0.4)',\n        position: 'topRight',\n        transitionIn: 'fadeInDown',\n        transitionOut: 'fadeOutUp',\n      });\n      startBtn.disabled = true;\n    }\n    else {\n      startBtn.disabled = false;\n    }\n  },\n};\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', start);\n\nfunction start() {\n  let intervalId = setInterval(() => {\n    input.disabled = true;\n    startBtn.disabled = true;\n    let dateNow = new Date();\n    let delta = userSelectedDate - dateNow;\n    let time = convertMs(delta);\n    displayOnScreen(time);\n    if (delta < 1000) {\n      clearInterval(intervalId);\n      input.disabled = false;\n      startBtn.disabled = false;\n    }\n  }, -1000);\n}\n\nfunction displayOnScreen({ days, hours, minutes, seconds }) {\n  day.textContent = days;\n  hour.textContent = hours;\n  minute.textContent = minutes;\n  second.textContent = seconds;\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = pad(Math.floor(ms / day));\n  const hours = pad(Math.floor((ms % day) / hour));\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","input","startBtn","day","hour","minute","second","options","selectedDates","iziToast","flatpickr","start","intervalId","delta","time","convertMs","displayOnScreen","days","hours","minutes","seconds","pad","value","ms"],"mappings":"sGAKA,IAAIA,EAAmB,KACnBC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEpD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAE9BR,GAAoBA,EADV,IAAI,MAEhBS,EAAS,KAAK,CACZ,QAAS,qCACT,gBAAiB,UACjB,aAAc,OACd,KAAM,iBACN,SAAU,QACV,UAAW,2BACX,SAAU,WACV,aAAc,aACd,cAAe,WACvB,CAAO,EACDP,EAAS,SAAW,IAGpBA,EAAS,SAAW,EAEvB,CACH,EACAQ,EAAUT,EAAOM,CAAO,EAExBL,EAAS,iBAAiB,QAASS,CAAK,EAExC,SAASA,GAAQ,CACf,IAAIC,EAAa,YAAY,IAAM,CACjCX,EAAM,SAAW,GACjBC,EAAS,SAAW,GAEpB,IAAIW,EAAQb,EADE,IAAI,KAEdc,EAAOC,EAAUF,CAAK,EAC1BG,EAAgBF,CAAI,EAChBD,EAAQ,MACV,cAAcD,CAAU,EACxBX,EAAM,SAAW,GACjBC,EAAS,SAAW,GAE1B,EAAK,IAAK,CACV,CAEA,SAASc,EAAgB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DjB,EAAI,YAAcc,EAClBb,EAAK,YAAcc,EACnBb,EAAO,YAAcc,EACrBb,EAAO,YAAcc,CACvB,CAEA,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASP,EAAUQ,EAAI,CAMrB,MAAMN,EAAOI,EAAI,KAAK,MAAME,EAAK,KAAG,CAAC,EAC/BL,EAAQG,EAAI,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACzCJ,EAAUE,EAAI,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACtDH,EAAUC,EAAI,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEvE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}